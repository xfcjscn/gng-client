'use strict';
function GPlatformCtrl($scope) {
	require([ 'jquery', 'sudoor-client/app/scripts/models/server', 'sudoor-client/app/scripts/models/postload' ], function($, server, postload) {
		$scope.$on('$viewContentLoaded', function() {
			postload.callBack();
			$('.swiper-container').swiper({
			// freeMode:true
			});
		});
		$scope.$on('$includeContentLoaded', function() {
			postload.callBack();
			$('.swiper-container').swiper({
			// freeMode:true
			});
		});

		/*
		 * ////////////////////////////////////////////////////////////////////////////////////// ////// Autogenerated by JaySvcUtil.exe
		 * http://JayData.org for more info ///////// ////// oData V2 /////////
		 * //////////////////////////////////////////////////////////////////////////////////////
		 */
		(function(global, $data, undefined) {

			$data.Entity.extend('BizData.CredentialUser', {
			    'Enabled' : {
				    'type' : 'Edm.Boolean'
			    },
			    'Password' : {
				    'type' : 'Edm.String'
			    },
			    'Username' : {
			        'key' : true,
			        'type' : 'Edm.String',
			        'nullable' : false,
			        'required' : true
			    },
			    'CredentialAuthorityDetails' : {
			        'type' : 'BizData.CredentialAuthority',
			        'required' : true,
			        'inverseProperty' : '$$unbound'
			    }
			});

			$data.Entity.extend('BizData.File', {
			    'Data' : {
				    'type' : 'Edm.Binary'
			    },
			    'Id' : {
			        'key' : true,
			        'type' : 'Edm.Int64',
			        'nullable' : false,
			        'required' : true
			    },
			    'Name' : {
				    'type' : 'Edm.String'
			    },
			    'Uri' : {
				    'type' : 'Edm.String'
			    }
			});

			$data.Entity.extend('BizData.User', {
			    'Email' : {
				    'type' : 'Edm.String'
			    },
			    'Id' : {
			        'key' : true,
			        'type' : 'Edm.Int64',
			        'nullable' : false,
			        'required' : true
			    },
			    'Name' : {
				    'type' : 'Edm.String'
			    },
			    'ItemDetails' : {
			        'type' : 'Array',
			        'elementType' : 'BizData.Item',
			        'inverseProperty' : 'UserDetails'
			    }
			});

			$data.Entity.extend('BizData.CredentialAuthority', {
			    'Authority' : {
				    'type' : 'Edm.String'
			    },
			    'Username' : {
			        'key' : true,
			        'type' : 'Edm.String',
			        'nullable' : false,
			        'required' : true
			    }
			});

			$data.Entity.extend('BizData.Image', {
			    'Id' : {
			        'key' : true,
			        'type' : 'Edm.Int64',
			        'nullable' : false,
			        'required' : true
			    },
			    'Name' : {
				    'type' : 'Edm.String'
			    },
			    'Path' : {
				    'type' : 'Edm.String'
			    },
			    'ItemDetails' : {
			        'type' : 'BizData.Item',
			        'required' : true,
			        'inverseProperty' : 'ImageDetails'
			    }
			});

			$data.Entity.extend('BizData.ActionHistory', {
			    'Action' : {
				    'type' : 'Edm.String'
			    },
			    'Id' : {
			        'key' : true,
			        'type' : 'Edm.Int64',
			        'nullable' : false,
			        'required' : true
			    },
			    'Owner' : {
				    'type' : 'Edm.String'
			    },
			    'Target' : {
				    'type' : 'Edm.String'
			    }
			});

			$data.Entity.extend('BizData.Item', {
			    'CreateDate' : {
				    'type' : 'Edm.DateTime'
			    },
			    'Desc' : {
			        'type' : 'Edm.String',
			        'nullable' : true,
			        'maxLength' : 255
			    },
			    'Id' : {
			        'key' : true,
			        'type' : 'Edm.Int64',
			        'nullable' : false,
			        'required' : true
			    },
			    'LastModified' : {
				    'type' : 'Edm.DateTime'
			    },
			    'Name' : {
				    'type' : 'Edm.String'
			    },
			    'Status' : {
				    'type' : 'Edm.String'
			    },
			    'ImageDetails' : {
			        'type' : 'Array',
			        'elementType' : 'BizData.Image',
			        'inverseProperty' : 'ItemDetails'
			    },
			    'UserDetails' : {
			        'type' : 'BizData.User',
			        'required' : true,
			        'inverseProperty' : 'ItemDetails'
			    }
			});

			$data.EntityContext.extend('BizData.BizDataContainer', {
			    'CredentialUsers' : {
			        type : $data.EntitySet,
			        elementType : BizData.CredentialUser
			    },
			    'Files' : {
			        type : $data.EntitySet,
			        elementType : BizData.File
			    },
			    'Users' : {
			        type : $data.EntitySet,
			        elementType : BizData.User
			    },
			    'CredentialAuthoritys' : {
			        type : $data.EntitySet,
			        elementType : BizData.CredentialAuthority
			    },
			    'Images' : {
			        type : $data.EntitySet,
			        elementType : BizData.Image
			    },
			    'ActionHistorys' : {
			        type : $data.EntitySet,
			        elementType : BizData.ActionHistory
			    },
			    'Items' : {
			        type : $data.EntitySet,
			        elementType : BizData.Item
			    }
			});

			$data.generatedContexts = $data.generatedContexts || [];
			$data.generatedContexts.push(BizData.BizDataContainer);

		})(window, $data);

		//server.config.serverURL = 'http://localhost:8080/gng-server-1.0';
		//server.config.serverURL = 'http://192.168.2.100:8080/gng-server-1.0';
		//server.config.serverURL = 'https://192.168.2.100:8443/gng-server-1.0.1-SNAPSHOT';
		//server.config.serverURL = 'https://www.gplatform.net:8443/gng-server-1.0.1-SNAPSHOT';
		
		server.config.serverURL = 'http://server.gplatform.net/gng-server';

		function blockUI() {
			$.blockUI();
		}
		function unBlockUI() {
			$.unblockUI();
		}

		server.config.dbListeners = {
		    beforeCreate : blockUI,
		    beforeUpdate : blockUI,
		    beforeDelete : blockUI,

		    afterCreate : unBlockUI,
		    afterUpdate : unBlockUI,
		    afterDelete : unBlockUI
		};

		// User server in template directly
		$scope.server = server;
	});
}
GPlatformCtrl.$inject = [ '$scope' ];